# Copyright 2023 Specter Ops, Inc.
#
# Licensed under the Apache License, Version 2.0
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
name: PR-Ticket-OoOrg

on:
  pull_request:
    types: [opened, reopened]

jobs:
  check_pr_origin:
    runs-on: self-hosted

    steps:
    - name: Check if PR is from within the organization
      id: check_org
      run: 
        ORG_NAME="SpecterOps"
        PR_URL=$(jq -r .pull_request.url "$GITHUB_EVENT_PATH")
        PR_DATA=$(curl -s -H "Authorization: Bearer ${{ secrets.JIRA_API_TOKEN }}" -H "Accept: application/vnd.github.v3+json" $PR_URL)
        PR_AUTHOR_LOGIN=$(echo $PR_DATA | jq -r .user.login)
        PR_AUTHOR_ORG=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/users/$PR_AUTHOR_LOGIN/orgs | jq -r ".[] | .login")
        if [[ "$ORG_NAME" == "$PR_AUTHOR_ORG" ]]; then
          echo "PR is from within the organization"
          echo "::set-output name=is_org::true"
        else
          echo "PR is not from within the organization"
          echo "::set-output name=is_org::false"
        fi


      if: steps.check_org.outputs.is_org == 'false'
    - name: Login
      uses: atlassian/gajira-login@v3
      env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
    - name: Jira Create
      uses: atlassian/gajira-create@v3
      with:
            project: BP
            issuetype: 'Product Feature'
            summary: ${{ github.event.pulls.title }}
            description: "Github Pull Request Link: ${{ github.event.pulls.html_url}} \r\n ${{ github.event.pulls.body }}"
            fields: '{"labels":["GitHubReport"]}'
       env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
