# Copyright 2024 Specter Ops, Inc.
#
# Licensed under the Apache License, Version 2.0
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: BloodHound Test Suite
run-name: BloodHound Test Suite started by @${{ github.actor }} for ${{ github.ref_name }}

on:
  workflow_call:
    inputs:
      bloodhound_image_tar_artifact_name:
        type: string
        required: true
      bloodhound_image_tar_path:
        type: string
        required: true

jobs:
  integration_tests:
    runs-on: ubuntu-latest
    name: Run Integration Tests
    services:
      postgres:
        image: postgres:16
        env:
          PGUSER: bloodhound
          POSTGRES_USER: bloodhound
          POSTGRES_PASSWORD: bloodhound
          POSTGRES_DB: bloodhound
        options: >-
          --health-cmd "psql -h localhost -U bloodhound -c select 1 -d bloodhound"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      neo4j:
        image: neo4j:4.4.32
        env:
          NEO4J_AUTH: neo4j/bloodhoundcommunityedition
          NEO4J_dbms_security_auth__enabled: false
          NEO4J_server_logs_debug_enabled: true
        options: >-
          --health-cmd "wget -O /dev/null -q http://localhost:7474"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Download BloodHound Container Image
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.bloodhound_image_tar_artifact_name }}
        path: /tmp

    - name: Load BloodHound Container Image
      shell: bash
      run: |-
        docker load --input "/tmp/${{ inputs.bloodhound_image_tar_artifact_name }}.tar"
        docker image ls

    - name: Execute Integration Test Suite
      shell: bash
      run: |-
        docker run --rm specterops/bloodhound:${{ inputs.bloodhound_image_tar_artifact_name }} \
          go work use && \
          go list -f '{{.Dir}}/...' -m | xargs go test
