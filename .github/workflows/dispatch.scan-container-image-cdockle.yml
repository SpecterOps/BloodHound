---
# Copyright 2025 Specter Ops, Inc.
#
# Licensed under the Apache License, Version 2.0
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Manual Dockle Container Security Scan
run-name: Dockle Container Security Scan triggered by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      docker_image:
        type: string
        required: true
        description: |-
          The full reference to the Docker container image to scan with Dockle.
          This should include the registry, repository name, and tag or digest.
          
          Dockle will analyze this image for:
          - Security best practices and CIS Docker Benchmark compliance
          - Dockerfile instruction optimization
          - Container configuration issues
          - Potential security vulnerabilities in image setup
          
          The image must be accessible from the runner environment, either:
          - Publicly available (e.g., from Docker Hub)
          - Accessible with the provided DockerHub credentials
          - Previously built and available locally
          
          Examples:
          - 'docker.io/specterops/bloodhound:latest'
          - 'myregistry.com/myapp:v1.2.3'
          - 'nginx@sha256:abc123...' (using digest)
        default: 'docker.io/specterops/bloodhound:latest'

jobs:
  scan-image:
    name: Scan Container Image (Dockle)
    uses: ./.github/workflows/workflow_call.scan-container-dockle.yml
    with:
      docker_image: ${{ inputs.docker_image }}
    secrets:
      dockerhub_account: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
