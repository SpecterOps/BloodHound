# Copyright 2024 Specter Ops, Inc.
#
# Licensed under the Apache License, Version 2.0
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Security Vulnerability Analysis
run-name: Security Vulnerability Analysis started by @${{ github.actor }} for ${{ github.ref_name }}

on:
  workflow_call:
    inputs:
      scan_type:
        type: string
        description: |-
          Controls the scope and target of the vulnerability scan to match your security needs.
          Different scan types serve different security assessment purposes:
          - 'repo': Comprehensive scan of the entire repository to catch all potential vulnerabilities
          - 'fs': Targeted scan of specific directories when you need to check particular components
          - 'image': Container-specific vulnerabilities scan for Docker images
          - 'config': Focus on misconfigurations in infrastructure-as-code files

          Defaults to 'repo' for maximum coverage
        default: repo
      scan_ref:
        type: string
        description: |-
          The target directory or path to scan for vulnerabilities.
          For image scans, specify the image reference.
          For filesystem scans, specify the directory path.

          Default: './' (current directory)
        default: ./
      severity:
        type: string
        description: |-
          Determines which security findings to report based on their impact level.
          Filter vulnerabilities to focus on the most important issues first:
          - CRITICAL: Severe vulnerabilities requiring immediate attention
          - HIGH: Significant security risks that should be addressed soon
          - MEDIUM: Moderate risks that should be planned for remediation
          - LOW: Minor issues that pose minimal risk
          - UNKNOWN: Issues with undetermined impact

          Default: 'CRITICAL,HIGH' to prioritize the most severe security issues
        default: CRITICAL,HIGH
      exit_code:
        type: string
        description: |-
          Exit code to return when vulnerabilities matching the specified severity criteria are found.
          Use '0' to always pass the workflow regardless of findings.

          Default: '1' (fail on findings)
        default: '1'
      ignore_unfixed:
        type: boolean
        description: |-
          Controls whether to include vulnerabilities that currently have no available fixes.
          Enable this when you want to:
          - Focus on actionable items that can be immediately addressed
          - Reduce noise in security reports
          - Prioritize fixable vulnerabilities first
          
          Set to false to maintain awareness of all vulnerabilities, even those without current patches.
          Default: false
        default: false
      trivy_db_repository:
        type: string
        default: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
      trivy_java_db_repository:
        type: string
        default: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db

jobs:
  trivy-scan:
    name: Trivy Vulnerability Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Execute Trivy Security Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: ${{ inputs.scan_type }}
          scan-ref: ${{ inputs.scan_ref }}
          severity: ${{ inputs.severity }
          exit-code: ${{ inputs.exit_code }
          ignore-unfixed: ${{ inputs.ignore_unfixed }
        env:
          TRIVY_DB_REPOSITORY: ${{ inputs.trivy_db_repository }}
          TRIVY_JAVA_DB_REPOSITORY: ${{ inputs.trivy_java_db_repository }}
