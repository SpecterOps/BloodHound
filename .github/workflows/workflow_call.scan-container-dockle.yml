---
name: Scan Container Image with Dockle
run-name: Scanning Container using Dockle by @${{ github.actor }}

on:
  workflow_call:
    inputs:
      docker_image:
        type: string
        required: true
        description: |-
          The full reference to the Docker container image to scan with Dockle.
          This should include the registry, repository name, and tag or digest.
          
          Dockle will analyze this image for:
          - Security best practices and CIS Docker Benchmark compliance
          - Dockerfile instruction optimization
          - Container configuration issues
          - Potential security vulnerabilities in image setup
          
          The image must be accessible from the runner environment, either:
          - Publicly available (e.g., from Docker Hub)
          - Accessible with the provided DockerHub credentials
          - Previously built and available locally
          
          Examples:
          - 'docker.io/specterops/bloodhound:latest'
          - 'myregistry.com/myapp:v1.2.3'
          - 'nginx@sha256:abc123...' (using digest)
    secrets:
      dockerhub_account:
        required: true
      dockerhub_token:
        required: true

jobs:
  scan-image:
    name: Scan Container Image (Dockle)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: docker/login-action@v3
        name: Authenticate with DockerHub Registry
        if: ${{ inputs.dockerhub_account != '' }}
        with:
          registry: docker.io
          username: ${{ secrets.dockerhub_account }}
          password: ${{ secrets.dockerhub_token }}

      - name: Download Build Automation Tool
        shell: bash
        run: |
          docker pull corpsegod/cli-tools:main

      - name: Execute Scan
        id: execute-scan
        shell: bash
        run: |
          docker run --rm \
            --volume $GITHUB_WORKSPACE:/app \
            corpsegod/cli-tools:main \
            dockle ${{ inputs.docker_image }}
