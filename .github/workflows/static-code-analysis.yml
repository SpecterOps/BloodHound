# Copyright 2024 Specter Ops, Inc.
#
# Licensed under the Apache License, Version 2.0
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: Static Code Analysis
run-name: Code Anaylsis started by @${{ github.actor }} for ${{ github.ref_name }}

on:
  workflow_call:
    inputs:
      bloodhound_image_tar_artifact_name:
        type: string
        required: true
      bloodhound_image_tar_path:
        type: string
        required: true
    secrets:
      dockerhub_account:
        required: true
      dockerhub_token:
        required: true
      ghcr_account:
        required: true
      ghcr_token:
        required: true
      gh_access_token:
        required: true

jobs:
  lint-container-images:
    name: Analyze Dockerfiles
    uses: ./.github/workflows/reusable.lint-container-image.yml
    secrets:
      dockerhub_account: ${{ secrets.dockerhub_account }}
      dockerhub_token: ${{ secrets.dockerhub_token }}
      ghcr_account: ${{ github.actor }}
      ghcr_token: ${{ secrets.github_token }}
      gh_access_token: ${{ secrets.gh_access_token }}

  trivy-scan:
    name: Analyze Security Vulnerabilities
    uses: ./.github/workflows/reusable.vulnerability-scan.yml

  golangci-lint:
    name: Analyze Golang Code
    runs-on: ubuntu-latest
    steps:
      - name: Download BloodHound Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.bloodhound_image_tar_artifact_name }}
          path: /tmp

      - name: Load BloodHound Docker Image
        shell: bash
        run: |-
          docker load --input "/tmp/${{ inputs.bloodhound_image_tar_artifact_name }}.tar"
          docker image ls

      - name: Run golangci-lint Analysis
        shell: bash
        run: |-
          docker run --rm specterops/bloodhound:${{ inputs.bloodhound_image_tar_artifact_name }} \
            golangci-lint

  eslint:
    runs-on: ubuntu-latest
    name: Analyze JavaScript/TypeScript Code
    steps:
      - name: Download BloodHound Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.bloodhound_image_tar_artifact_name }}
          path: /tmp

      - name: Load BloodHound Docker Image
        shell: bash
        run: |-
          docker load --input "/tmp/${{ inputs.bloodhound_image_tar_artifact_name }}.tar"
          docker image ls

      - name: Run ESLint Analysis
        shell: bash
        run: |-
          docker run --rm specterops/bloodhound:${{ inputs.bloodhound_image_tar_artifact_name }} \
            yarn run lint
